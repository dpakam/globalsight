# 
#  The Apache Software License, Version 1.1
# 
# 
#  Copyright (c) 2003 The Apache Software Foundation.  All rights
#  reserved.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
# 
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
# 
#  3. The end-user documentation included with the redistribution,
#     if any, must include the following acknowledgment:
#        "This product includes software developed by the
#         Apache Software Foundation (http://www.apache.org/)."
#     Alternately, this acknowledgment may appear in the software itself,
#     if and wherever such third-party acknowledgments normally appear.
# 
#  4. The names "Xalan" and "Apache Software Foundation" must
#     not be used to endorse or promote products derived from this
#     software without prior written permission. For written
#     permission, please contact apache@apache.org.
# 
#  5. Products derived from this software may not be called "Apache",
#     nor may "Apache" appear in their name, without prior written
#     permission of the Apache Software Foundation.
# 
#  THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#  DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
#  ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#  USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.
#  ====================================================================
# 
#  This software consists of voluntary contributions made by many
#  individuals on behalf of the Apache Software Foundation and was
#  originally based on software copyright (c) 1999, Lotus
#  Development Corporation., http://www.lotus.com.  For more
#  information on the Apache Software Foundation, please see
#  <http://www.apache.org/>.
#
#  ====================================================================
#
#  JAXP provides a mechanism for applications to parse and transform 
#  XML documents independent of any given XML processing implementation.  
#  An application can swap between different implementations without 
#  having to change any code. This is accomplished, in part by using
#  "Factory Finder's" to locate a particular implementation, using a
#  prescribed ordered lookup procedure.   
#
#  IBM XSLT4J conforms to the JAXP 1.2 specification and therefore uses
#  the following procedure to determine which implementations to use
#  for the TransformerFactory, SAXParserFactory and the 
#  DocumentBuilderFactory.
#
#  * first, XSLT4J will examine the system properties for the 
#    following keys:
#      - javax.xml.transform.TransformerFactory
#      - javax.xml.parsers.SAXParserFactory
#      - javax.xml.parsers.DocumentBuilderFactory
#  * next, it will try to find a file called jaxp.properties in
#    the lib subdirectory of your JRE installation and look
#    for the keys above
#  * next, it will examine all the jars on your classpath to
#    try and find one with the appropriate entries in its
#    META-INF/services directory
#  * if all else fails, it will use a hardcoded default.  The
#    defaults for XSLT4J are:
#      - org.apache.xalan.processor.TransformerFactoryImpl
#         ** this default tells XSLT4J to use the Interpretive
#            processor.  If you want to use the XSLT4J Compiled 
#            (XSLTC) processor, change the entry in this file or 
#            programmatically set the system property for the
#            javax.xml.transform.TransformerFactory key to 
#            org.apache.xalan.xsltc.trax.TransformerFactoryImpl
#      - org.apache.xerces.jaxp.SAXParserFactoryImpl
#      - org.apache.xerces.jaxp.DocumentBuilderFactoryImpl  
#
#  The third step can be quite time-consuming, especially if you
#  have a lot of jars on your classpath and run applications which
#  require the creation of lots of transformer and parser factories.
#
#  To improve XML parsing and processing performance, copy this
#  file into your JRE's lib directory and uncomment the entries below.  
#  The XML parser and XSLT processor can be overridden, if necessary, 
#  by setting system properties in your application.
#
#  ====================================================================
#
javax.xml.transform.TransformerFactory=org.apache.xalan.processor.TransformerFactoryImpl
javax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl
javax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl
